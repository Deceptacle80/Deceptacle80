# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
#_________________________________________________________________________________________________________
        
def show_instructions():
    print("Welcome, Weyland Corp, Officer. ")
    print("Please Navigate Your Way Through The Ship Using 'North', 'South', 'East', 'West' To The Shuttle Home. ")
    print("Collect all six items in the ship win the game. ")
    print("Type 'leave' to exit the game.\n ")


# This is the dictionary of rooms and direction in which to travel

rooms = {
    "Cryo-Room": {'South': 'Prep Room', 'West': 'Cafeteria', 'North': 'Control Room', 'East': 'Med Lab'},
    "Prep Room": {'East': 'Derelict Spacecraft', 'North': 'Cryo-Room', 'Item': 'Space suit'},
    "Cafeteria": {'East': 'Cryo-Room', 'Item': 'Cattle Prod'},
    "Derelict Spacecraft": {'West': 'Prep Room', 'Item': 'Space Helmet(Slightly Damaged)'},
    "Control Room": {'East': 'Shuttle to Earth', 'South': 'Cryo-Room', 'Item': 'Access Badge'},
    "Shuttle to Earth": {"West": 'Control Room', 'Item': 'Jonesy'},
    "Med Lab": {'North': 'Air Ducts', 'West': "Cryo-Room", 'Item': 'Flamethrower(left behind)'},
    "Air Ducts": {"South": "Med Lab", "Item": 'Villain'},
}

valid_moves = ['North', 'South', 'East', 'West']
inventory = []
current_room = "Cryo-Room"

show_instructions()

while True:
    print(f"You are in the {current_room}\n")
    print(f"You have the following items {inventory}")
    move = input("Please enter a move: ").title()

    if move == 'Exit':
        print("You have left the game. Please come back again")
        exit(0)
    elif move not in valid_moves:
        print("Please  enter a valid move")
    elif move not in rooms[current_room]:
        print("There is a wall in that direction. Please enter another direction.\n")
    else:
        current_room = rooms[current_room][move]

        if current_room == "Air Ducts":
            if len(inventory) != 6:
                print("You encountered the Xenomorph and did not survive.")
                print("You have my sympathies.\n")
                print("GAME OVER!")

            else:
                print("Congratulations. You have reached the Shuttle! Enjoy the trip back to Earth.")
            exit(0)
        else:
            if "Item" in rooms[current_room]:
                if rooms[current_room]["Item"] not in inventory:
                    inventory.append(rooms[current_room]["Item"])
                else:
                    print(f"You already have the {rooms[current_room]['Item']} in your inventory")

            else:
                print("This room is empty")

